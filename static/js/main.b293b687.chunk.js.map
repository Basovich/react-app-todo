{"version":3,"sources":["contextTodo.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/TodoAdd/validate.js","components/TodoAdd/TodoAdd.js","components/TodoChange/TodoChange.js","components/TodoFilter/TodoFilter.js","reducer.js","App.js","reportWebVitals.js","index.js"],"names":["TodoContext","React","createContext","TodoItem","todo","id","useContext","dispatch","openChangeForm","openAddForm","text","className","title","project","priority","description","type","onClick","e","_this","currentTarget","closest","querySelector","classList","toggle","textContent","contains","payload","TodoList","state","filterPriority","filterProject","filteredTodos","cloneTodos","todos","arr","sort","a","b","filter","slice","length","map","validate","isNewTodo","fieldsName","isValid","forEach","field","index","name","value","trim","isValidate","document","add","useInputValue","defaultValue","useState","setValue","bind","onChange","event","target","remove","clear","val","TodoAdd","visibleForm","toggleAddForm","clearForm","validator","addTask","placeholder","disabled","TodoChange","changeForm","setTitle","setProject","setDescription","setPriority","useEffect","TodoFilter","setNewFilterPriority","setNewFilterProject","checked","setChecked","projects","indexOf","push","bool","reducer","action","Date","now","newState","App","data","JSON","parse","localStorage","getItem","useReducer","setChangeForm","setVisibleForm","setFilterPriority","setFilterProject","setItem","stringify","error","alert","Provider","findIndex","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oRAIeA,G,YAFKC,IAAMC,iBCoEXC,MAjEf,YAAiC,IAAbC,EAAY,EAAZA,KAAMC,EAAM,EAANA,GAAM,EACsBC,qBAAWN,GAArDO,EADoB,EACpBA,SAAUC,EADU,EACVA,eAAgBC,EADN,EACMA,YAE5BC,EACQ,4EADRA,EAES,kFAWf,OACI,qBAAIC,UAAU,OAAd,UACI,mBAAGA,UAAU,cAAb,SAA4BP,EAAKQ,QACjC,sBAAKD,UAAU,aAAf,UACI,oBAAGA,UAAU,gBAAb,UACI,uEACA,sBAAMA,UAAU,qBAAhB,SAAsCP,EAAKS,aAE/C,oBAAGF,UAAU,iBAAb,UACI,yFACA,sBAAMA,UAAU,wBAAhB,SAAyCP,EAAKU,iBAGtD,sBAAKH,UAAU,oBAAf,UACI,mBAAGA,UAAU,0BAAb,uCACA,mBAAGA,UAAU,yBAAb,SAAuCP,EAAKW,iBAEhD,sBAAKJ,UAAU,qBAAf,UACI,wBAAQA,UAAU,mCACdK,KAAK,SACLC,QAAU,WACNR,GAAY,GACZD,EAAeH,IAJvB,yGASA,wBAAQM,UAAU,kCACdK,KAAK,SACLC,QArChB,SAA2BC,GACvB,IAAMC,EAAQD,EAAEE,cAEVL,EADOI,EAAME,QAAQ,SACFC,cAAc,sBACvCP,EAAYQ,UAAUC,OAAO,cAC7BL,EAAMM,YAAcV,EAAYQ,UAAUG,SAAS,cAAgBhB,EAAiBA,GA8B5E,uFAMA,wBAAQC,UAAU,mCACdK,KAAK,SACLC,QAAS,WACLT,GAAe,GACfD,EAAS,CACLS,KAAM,SACNW,QAAStB,KANrB,sHChDD,SAASuB,IAAa,IAAD,EACatB,qBAAWN,GAAnD6B,EAD2B,EAC3BA,MAAOC,EADoB,EACpBA,eAAgBC,EADI,EACJA,cAExBC,EAEJ,SAAgBC,EAAYnB,EAAUD,GAClC,IAAIqB,EAAQD,EAOZnB,GAJwBqB,EAKHD,OAJjBC,EAAIC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEvB,UAAYwB,EAAExB,SAAW,GAAK,MAKlDoB,EAAQD,EAGG,YAAZpB,IACDqB,EAAQA,EAAMK,QAAO,SAAAnC,GAAI,OAAIA,EAAKS,UAAYA,MAVlD,IAAwBsB,EAaxB,OAAOD,EAnBSK,CAAOV,EAAMW,QAASV,EAAgBC,GAuB1D,OACQ,oBAAIpB,UAAU,YAAd,SAEQqB,EAAcS,OACZT,EAAcU,KAAI,SAAAtC,GAChB,OACI,cAAC,EAAD,CAEIA,KAAMA,EACNC,GAAID,EAAKC,IAFJD,EAAKC,OAMpB,0K,UC7CTsC,EAAW,SAAC/B,EAAOC,EAASE,EAAaD,EAAU8B,GAE/D,OAAO,WACN,IACMC,EAAa,CAAC,QAAS,UAAW,sBAAuB,YAC3DC,GAAU,EASd,MAXe,CAAClC,EAAOC,EAASE,EAAaD,GAItCiC,SAAS,SAACC,EAAOC,IAUzB,SAAoBC,GAEnB,KADcN,EAAaM,EAAKC,MAAMC,OAAUF,EAAKE,QAEpD,OAAO,EAEH,GAAoB,YAAfF,EAAKC,MACd,OAAO,EAGR,OAAO,GAlBAE,CAAWL,KAChBM,SAAShC,cAAT,iBAAiCuB,EAAWI,GAA5C,OAAwD1B,UAAUgC,IAAI,eACtET,GAAU,MAILA,ICNT,SAASU,EAAcC,GAAe,IAAD,EACPC,mBAASD,GADF,mBAC1BN,EAD0B,KACnBQ,EADmB,KAajC,MAAO,CACHC,KAAM,CAACT,QAAOU,SAXD,SAAAC,GACbH,EAASG,EAAMC,OAAOZ,QAUElC,QAPZ,SAAA6C,GACZA,EAAMC,OAAOxC,UAAUyC,OAAO,iBAO9Bb,QACAc,MALU,SAACC,GAAD,OAASP,EAASO,KA2IrBC,MAjIf,WAAoB,IAAD,EACgD7D,qBAAWN,GAAlEO,EADO,EACPA,SAAUC,EADH,EACGA,eAAgBC,EADnB,EACmBA,YAAc2D,EADjC,EACiCA,YAE1CxD,EAAQ4C,EAAc,IACtB3C,EAAU2C,EAAc,IACxBzC,EAAcyC,EAAc,IAC5B1C,EAAW0C,EAAc,WAE/B,SAASa,IACL5D,GAAa2D,GACbE,IAGJ,SAASA,IACL1D,EAAMqD,MAAM,IACZpD,EAAQoD,MAAM,IACdlD,EAAYkD,MAAM,IAClBnD,EAASmD,MAAM,WAenB,IAAMM,EAAY5B,EAAS/B,EAAOC,EAASE,EAAaD,GAAU,GAElE,SAAS0D,IACCD,MAdNhE,EAAS,CACLS,KAAM,MACNW,QAAS,CACLf,MAAOA,EAAMuC,MACbtC,QAASA,EAAQsC,MACjBpC,YAAaA,EAAYoC,MACzBrC,SAAUA,EAASqC,SAU3BmB,KAqFJ,OACI,qBAAK3D,UAAU,gBAAf,SACKyD,EAnED,qCACI,gJACA,uBAAMzD,UAAU,WAAhB,UACI,wBAAOA,UAAU,mCAAjB,UACI,uBACI8D,YAAY,IACZvB,KAAK,QACLC,MAAOvC,EAAMgD,KAAKT,MAClBU,SAAUjD,EAAMgD,KAAKC,SACrB5C,QAASL,EAAMgD,KAAK3C,UAExB,sHAEJ,wBAAON,UAAU,mCAAjB,UACI,uBACI8D,YAAY,IACZvB,KAAK,UACLC,MAAOtC,EAAQ+C,KAAKT,MACpBU,SAAUhD,EAAQ+C,KAAKC,SACvB5C,QAASL,EAAMgD,KAAK3C,UAExB,gHAGJ,wBAAON,UAAU,mCAAjB,UACI,0BACI8D,YAAY,IACZvB,KAAK,sBACLC,MAAOpC,EAAY6C,KAAKT,MACxBU,SAAU9C,EAAY6C,KAAKC,SAC3B5C,QAASL,EAAMgD,KAAK3C,UAExB,0GAEJ,qBAAKN,UAAU,SAAf,SACI,yBACIA,UAAU,cACVuC,KAAK,WACLC,MAAOrC,EAAS8C,KAAKT,MACrBU,SAAU/C,EAAS8C,KAAKC,SACxB5C,QAASL,EAAMgD,KAAK3C,QALxB,UAOI,wBAAQkC,MAAM,UAAUuB,UAAQ,EAAhC,+GACA,wBAAQvB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,oBAGR,sBAAKxC,UAAU,qDAAf,UACI,wBAAQA,UAAU,mCACdK,KAAK,SACLC,QAASuD,EAFb,8DAKA,wBAAQ7D,UAAU,mCACdK,KAAK,SACLC,QAASoD,EAFb,6EArEZ,qBAAK1D,UAAU,qEAAf,SACI,wBAAQA,UAAU,mCACdK,KAAK,SACLC,QAAU,WACNoD,IACA7D,GAAe,IAJvB,wG,MC6BDmE,MA/Ff,WAAuB,IAAD,EAC+BrE,qBAAWN,GAApD4E,EADU,EACVA,WAAYpE,EADF,EACEA,eAAgBD,EADlB,EACkBA,SADlB,EAGQmD,mBAASkB,EAAWhE,OAH5B,mBAGXA,EAHW,KAGJiE,EAHI,OAIYnB,mBAASkB,EAAW/D,SAJhC,mBAIXA,EAJW,KAIFiE,EAJE,OAKoBpB,mBAASkB,EAAW7D,aALxC,mBAKXA,EALW,KAKEgE,EALF,OAMcrB,mBAASkB,EAAW9D,UANlC,mBAMXA,EANW,KAMDkE,EANC,KAQlBC,qBAAU,WACNJ,EAASD,EAAWhE,OACpBkE,EAAWF,EAAW/D,SACtBkE,EAAeH,EAAW7D,aAC1BiE,EAAYJ,EAAW9D,YACxB,CAAC8D,IAgBJ,IAAML,EAAY5B,EAAS/B,EAAOC,EAASE,EAAaD,GAAU,GAOlE,OACI,qCACI,6HACA,uBAAMH,UAAU,mBAAhB,UACI,wBAAOA,UAAU,mCAAjB,UACI,uBAAO8D,YAAY,IACftB,MAAOvC,EACPsC,KAAK,QACLW,SAAU,SAAAC,GAAK,OAAIe,EAASf,EAAM1C,cAAc+B,UAEpD,sHAEJ,wBAAOxC,UAAU,mCAAjB,UACI,uBAAO8D,YAAY,IACftB,MAAOtC,EACPqC,KAAK,UACLW,SAAU,SAAAC,GAAK,OAAIgB,EAAWhB,EAAMC,OAAOZ,UAE/C,gHAGJ,wBAAOxC,UAAU,mCAAjB,UACI,0BAAU8D,YAAY,IAClBtB,MAAOpC,EACPmC,KAAK,sBACLW,SAAU,SAAAC,GAAK,OAAIiB,EAAejB,EAAMC,OAAOZ,UAEnD,0GAEJ,qBAAKxC,UAAU,SAAf,SACI,yBAAQA,UAAU,cACdwC,MAAOrC,EACPoC,KAAK,WACLW,SAAU,SAAAC,GAAK,OAAIkB,EAAYlB,EAAMC,OAAOZ,QAHhD,UAII,wBAAQA,MAAM,UAAUuB,UAAQ,EAAhC,+GACA,wBAAQvB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,oBAGR,sBAAKxC,UAAU,qDAAf,UACI,wBAAQA,UAAU,mCACdK,KAAK,SACLC,QAhDpB,WACUsD,KAfNhE,EAAS,CACLS,KAAM,SACNW,QAAS,CACLf,QACAC,UACAE,cACAD,WACAT,GAAIuE,EAAWvE,OAqDX,8DAKA,wBAAQM,UAAU,mCACdK,KAAK,SACLC,QAAU,WACNT,GAAe,IAHvB,8E,MC1BL0E,MAzDf,WAAuB,IAAD,EACsE5E,qBAAWN,GAA9F8B,EADa,EACbA,eAAgBqD,EADH,EACGA,qBAAsBtD,EADzB,EACyBA,MAAOE,EADhC,EACgCA,cAAeqD,EAD/C,EAC+CA,oBAD/C,EAEY1B,mBAAS5B,GAFrB,mBAEXuD,EAFW,KAEFC,EAFE,OAGY5B,mBAAS3B,GAHrB,mBAGXlB,EAHW,KAGFiE,EAHE,KAKdS,EAAW,GAkBf,OAjBA1D,EAAMkB,SAAQ,SAAA3C,IACsB,IAA5BA,EAAKS,QAAQ2E,WACbD,EAASE,KAAKrF,EAAKS,YAgBvB,qCACI,oBAAIF,UAAU,qBAAd,mDACA,sBAAKA,UAAU,cAAf,UACI,wBAAOA,UAAU,yBAAjB,UACI,uBACIK,KAAK,WACLqE,QAASA,EACTxB,SAAU,SAAAC,GAAK,OAnBR4B,EAmB8B5B,EAAMC,OAAOsB,QAlBlEF,EAAqBO,QACrBJ,EAAWI,GAFf,IAA2BA,KAqBX,gHAEJ,qBAAK/E,UAAU,SAAf,SACI,yBACIA,UAAU,cACVwC,MAAOtC,EACPgD,SAAU,SAAAC,GAAK,OAtBT4B,EAsB8B5B,EAAMC,OAAOZ,MArBjEiC,EAAoBM,QACpBZ,EAAWY,GAFf,IAA0BA,GAmBV,UAKI,wBAAQvC,MAAM,UAAd,2EACCoC,EAAS7C,KAAK,SAAC7B,EAASoC,GACrB,OACI,wBACQE,MAAOtC,EADf,SAEKA,GAFQoC,kB,OCjD7C,SAAS0C,EAAQ9D,EAAO+D,GACpB,OAAQA,EAAO5E,MACX,IAAK,MACD,MAAM,GAAN,mBACOa,GADP,CAEI,CACIxB,GAAIwF,KAAKC,MACTlF,MAAOgF,EAAOjE,QAAQf,MACtBC,QAAS+E,EAAOjE,QAAQd,QACxBE,YAAa6E,EAAOjE,QAAQZ,YAC5BD,SAAU8E,EAAOjE,QAAQb,YAIrC,IAAK,SACD,IAAIiF,EAAW,GAcf,OAbAlE,EAAMkB,SAAQ,SAAA3C,GACNA,EAAKC,KAAOuF,EAAOjE,QAAQtB,GAC3B0F,EAASN,KAAKrF,GAEd2F,EAASN,KAAK,CACVpF,GAAIuF,EAAOjE,QAAQtB,GACnBO,MAAOgF,EAAOjE,QAAQf,MACtBC,QAAS+E,EAAOjE,QAAQd,QACxBE,YAAa6E,EAAOjE,QAAQZ,YAC5BD,SAAU8E,EAAOjE,QAAQb,cAI9BiF,EAEX,IAAK,SACD,OAAOlE,EAAMU,QAAQ,SAAAnC,GAAI,OAAIwF,EAAOjE,UAAYvB,EAAKC,MAEzD,QACI,OAAOwB,GCoCJmE,MA/Df,WACC,IAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GAD5C,EAEYC,qBAAWX,EAASM,GAFhC,mBAEPpE,EAFO,KAEAtB,EAFA,OAIsBmD,oBAAS,GAJ/B,mBAIPkB,EAJO,KAIK2B,EAJL,OAYwB7C,oBAAS,GAZjC,mBAYPU,EAZO,KAYMoC,EAZN,OAiB8B9C,oBAAS,GAjBvC,mBAiBP5B,EAjBO,KAiBS2E,EAjBT,OAsB4B/C,mBAAS,WAtBrC,mBAsBP3B,EAtBO,KAsBQ2E,EAtBR,KAqCd,OAVAzB,qBAAU,WACT,IACCmB,aAAaO,QAAQ,QAAST,KAAKU,UAAU/E,IAC5C,MAAOgF,GACRC,MAAMD,GAGPN,GAAc,KACZ,CAAC1E,IAGH,cAAC,EAAYkF,SAAb,CAAsB5D,MACrB,CACCtB,QACAtB,WACAqE,aACApE,eAtCH,SAAwBH,GAGpBkG,GADI,IAAPlG,GAEiBwB,EAAMA,EAAMmF,WAAU,SAAAC,GAAI,OAAIA,EAAK5G,KAAOA,QAmCzDI,YA/BH,SAAqB2D,GACpBoC,EAAepC,IA+BbA,cACAtC,iBACAqD,qBA7BH,SAA8BO,GAC7Be,EAAkBf,IA6BhB3D,gBACAqD,oBA1BH,SAA6BvE,GAC5B6F,EAAiB7F,KAcjB,SAcC,sBAAKF,UAAU,UAAf,UACC,uHACA,cAAC,EAAD,IACA,cAAC,EAAD,IACCiE,EAAa,cAAC,EAAD,IAAiB,KAC/B,cAAC,EAAD,UCrDWsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvE,SAASwE,eAAe,SAM1BZ,M","file":"static/js/main.b293b687.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TodoContext = React.createContext()\r\n\r\nexport default TodoContext;","import React, { useContext } from 'react';\r\nimport './TodoItem.scss'\r\nimport TodoContext from '../../contextTodo'\r\n\r\n\r\nfunction TodoItem({ todo, id }) {\r\n    const { dispatch, openChangeForm, openAddForm } = useContext(TodoContext);\r\n\r\n    const text = {\r\n        isHidden: 'Показати опис',\r\n        isVisible: 'Приховати опис',\r\n    }\r\n\r\n    function toggleDescription(e) {\r\n        const _this = e.currentTarget;\r\n        const todo = _this.closest('.todo');\r\n        const description = todo.querySelector('.todo__description');\r\n        description.classList.toggle('is-visible');\r\n        _this.textContent = description.classList.contains('is-visible') ? text.isVisible : text.isHidden;\r\n    }\r\n\r\n    return (        \r\n        <li className=\"todo\"> \r\n            <p className=\"todo__title\">{todo.title}</p>  \r\n            <div className=\"todo__info\">\r\n                <p className=\"todo__project\">\r\n                    <b>Проект: </b> \r\n                    <span className=\"todo__project-name\">{todo.project}</span>\r\n                </p>\r\n                <p className=\"todo__priority\">\r\n                    <b>Пріорітет: </b> \r\n                    <span className=\"todo__priority-number\">{todo.priority}</span>\r\n                </p>\r\n            </div>\r\n            <div className=\"todo__description\">\r\n                <b className=\"todo__description-title\">Опис:</b>\r\n                <p className=\"todo__description-text\">{todo.description}</p>                \r\n            </div>\r\n            <div className=\"todo__button-group\">\r\n                <button className=\"todo__button todo__button-change\" \r\n                    type=\"button\"\r\n                    onClick={ () => {\r\n                        openAddForm(false);\r\n                        openChangeForm(id);\r\n                    }}>\r\n                    Змінити завдання\r\n                </button>\r\n\r\n                <button className=\"todo__button todo__button--more\" \r\n                    type=\"button\" \r\n                    onClick={toggleDescription}>\r\n                    Показати опис\r\n                </button>\r\n\r\n                <button className=\"todo__button todo__button--error\" \r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                        openChangeForm(false);\r\n                        dispatch({\r\n                            type: 'remove',\r\n                            payload: id\r\n                        })\r\n                    }}>\r\n                    Видалити завдання\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TodoItem","import React, {useContext} from 'react';\r\nimport './TodoList.scss';\r\nimport TodoItem from '../TodoItem/TodoItem';\r\nimport TodoContext from \"../../contextTodo\";\r\n\r\n\r\nexport default function TodoList () {\r\n    let {state, filterPriority, filterProject} = useContext(TodoContext);\r\n\r\n    let filteredTodos = filter(state.slice(), filterPriority, filterProject);\r\n\r\n    function filter(cloneTodos, priority, project) {\r\n        let todos = cloneTodos;\r\n\r\n        // 1. Filter Priority\r\n        function sortByPriority(arr) {\r\n            arr.sort((a, b) => +a.priority > +b.priority ? 1 : -1);\r\n        }\r\n\r\n        priority\r\n            ? sortByPriority(todos)\r\n            : todos = cloneTodos;\r\n\r\n        // 2. Filter Project Name\r\n        if ( project !== 'default' ) {\r\n            todos = todos.filter(todo => todo.project === project);\r\n        }\r\n\r\n        return todos;\r\n    }\r\n\r\n\r\n    return (\r\n            <ul className=\"todo-list\">\r\n                {\r\n                    filteredTodos.length\r\n                    ? filteredTodos.map(todo => {\r\n                        return (\r\n                            <TodoItem\r\n                                key={todo.id}\r\n                                todo={todo}\r\n                                id={todo.id}\r\n                            />\r\n                        )\r\n                    })\r\n                    : <li>Перелік завдань порожній</li>\r\n                }\r\n            </ul>\r\n    )\r\n}","export const validate = (title, project, description, priority, isNewTodo) => {\r\n\r\n\treturn function validation() {\r\n\t\tconst fields = [title, project, description, priority];\r\n\t\tconst fieldsName = ['title', 'project', 'descriptionTextarea', 'priority'];\r\n\t\tlet isValid = true;\r\n\r\n\t\tfields.forEach( (field, index) => {\r\n\t\t\tif ( !isValidate(field) ) {\r\n\t\t\t\tdocument.querySelector(`[name=\"${fieldsName[index]}\"]`).classList.add('input-error');\r\n\t\t\t\tisValid = false;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn isValid;\r\n\t}\r\n\r\n\tfunction isValidate(name) {\r\n\t\tconst value = isNewTodo ? !name.value.trim() : !name.trim();\r\n\t\tif ( value ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse if ( name.value === 'default' ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n}","import React, {useContext, useState} from 'react';\r\nimport './TodoAdd.scss'\r\nimport TodoContext from '../../contextTodo'\r\nimport {validate} from \"./validate\";\r\n\r\n// обьявляем кастомный хук для всех инпутов,\r\n// хук не уменьшил на много код,\r\n// но я попробовал сам сделать хук + одно действие контролириуем в одном месте\r\nfunction useInputValue(defaultValue) {\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    const onChange = event => {\r\n        setValue(event.target.value);\r\n    }\r\n\r\n    const onClick = event => {\r\n        event.target.classList.remove('input-error');\r\n    }\r\n\r\n    const clear = (val) => setValue(val);\r\n\r\n    return {\r\n        bind: {value, onChange, onClick},\r\n        value,\r\n        clear\r\n    }\r\n}\r\n\r\n\r\nfunction TodoAdd() {\r\n    const { dispatch, openChangeForm, openAddForm , visibleForm} = useContext(TodoContext);\r\n\r\n    const title = useInputValue('');\r\n    const project = useInputValue('');\r\n    const description = useInputValue('');\r\n    const priority = useInputValue('default');\r\n\r\n    function toggleAddForm() {\r\n        openAddForm(!visibleForm);\r\n        clearForm();\r\n    }\r\n\r\n    function clearForm() {\r\n        title.clear('');\r\n        project.clear('');\r\n        description.clear('');\r\n        priority.clear('default');\r\n    }\r\n\r\n    function dispatchState() {\r\n        dispatch({\r\n            type: 'add',\r\n            payload: {\r\n                title: title.value,\r\n                project: project.value,\r\n                description: description.value,\r\n                priority: priority.value\r\n            }\r\n        });\r\n    }\r\n\r\n    const validator = validate(title, project, description, priority, true);\r\n\r\n    function addTask() {\r\n        if ( !validator() ) return;\r\n        dispatchState();\r\n        clearForm();\r\n    }\r\n\r\n    function showButton() {\r\n        return (\r\n            <div className=\"todo__button-group todo__button-group--right mt-20 todo-button-add\">\r\n                <button className=\"todo__button todo__button-change\"\r\n                    type=\"button\"\r\n                    onClick={ () => {\r\n                        toggleAddForm();\r\n                        openChangeForm(false);\r\n                    }}>\r\n                    Додати завдання\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function showForm() {\r\n        return (\r\n            <>\r\n                <h2>Додати нове завдання</h2>\r\n                <form className=\"todo-add\">\r\n                    <label className=\"pure-material-textfield-outlined\">\r\n                        <input\r\n                            placeholder=\" \"\r\n                            name=\"title\"\r\n                            value={title.bind.value}\r\n                            onChange={title.bind.onChange}\r\n                            onClick={title.bind.onClick}\r\n                        />\r\n                        <span>Назва завдання</span>\r\n                    </label>\r\n                    <label className=\"pure-material-textfield-outlined\">\r\n                        <input\r\n                            placeholder=\" \"\r\n                            name=\"project\"\r\n                            value={project.bind.value}\r\n                            onChange={project.bind.onChange}\r\n                            onClick={title.bind.onClick}\r\n                        />\r\n                        <span>Назва проекту</span>\r\n                    </label>\r\n\r\n                    <label className=\"pure-material-textfield-outlined\">\r\n                        <textarea\r\n                            placeholder=\" \"\r\n                            name=\"descriptionTextarea\"\r\n                            value={description.bind.value}\r\n                            onChange={description.bind.onChange}\r\n                            onClick={title.bind.onClick}\r\n                        />\r\n                        <span>Опис проекту</span>\r\n                    </label>\r\n                    <div className=\"select\">\r\n                        <select\r\n                            className=\"select-text\"\r\n                            name=\"priority\"\r\n                            value={priority.bind.value}\r\n                            onChange={priority.bind.onChange}\r\n                            onClick={title.bind.onClick}\r\n                        >\r\n                            <option value=\"default\" disabled>Оберіть пріорітет</option>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"todo__button-group todo__button-group--right mt-20\">\r\n                        <button className=\"todo__button todo__button-change\"\r\n                            type=\"button\"\r\n                            onClick={addTask}>\r\n                            Зберегти\r\n                    </button>\r\n                        <button className=\"todo__button todo__button--error\"\r\n                            type=\"button\"\r\n                            onClick={toggleAddForm}>\r\n                            Відмінити\r\n                    </button>\r\n                    </div>\r\n                </form>    \r\n            </>            \r\n        )\r\n    }\r\n\r\n    return (      \r\n        <div className='todo-add-wrap'>         \r\n            {visibleForm ? showForm() : showButton()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoAdd","import React, { useState, useContext, useEffect } from 'react';\r\nimport './TodoChange.scss'\r\nimport TodoContext from '../../contextTodo'\r\nimport {validate} from \"../TodoAdd/validate\";\r\n\r\n\r\nfunction TodoChange() {\r\n    const { changeForm, openChangeForm, dispatch } = useContext(TodoContext);\r\n\r\n    const [title, setTitle] = useState(changeForm.title);\r\n    const [project, setProject] = useState(changeForm.project);\r\n    const [description, setDescription] = useState(changeForm.description);\r\n    const [priority, setPriority] = useState(changeForm.priority);\r\n\r\n    useEffect(() => {\r\n        setTitle(changeForm.title);\r\n        setProject(changeForm.project);\r\n        setDescription(changeForm.description);\r\n        setPriority(changeForm.priority);\r\n    }, [changeForm]);\r\n\r\n\r\n    function dispatchState() {\r\n        dispatch({\r\n            type: 'change',\r\n            payload: {\r\n                title,\r\n                project,\r\n                description,\r\n                priority,\r\n                id: changeForm.id\r\n            }\r\n        });\r\n    }\r\n\r\n    const validator = validate(title, project, description, priority, false);\r\n\r\n    function changeTask() {\r\n        if ( !validator() ) return;\r\n        dispatchState();\r\n    }\r\n\r\n    return (       \r\n        <>\r\n            <h2>Змінити завдання</h2>\r\n            <form className=\"todo-change-wrap\">\r\n                <label className=\"pure-material-textfield-outlined\">\r\n                    <input placeholder=\" \" \r\n                        value={title}\r\n                        name=\"title\"\r\n                        onChange={event => setTitle(event.currentTarget.value)} \r\n                    />\r\n                    <span>Назва завдання</span>\r\n                </label>\r\n                <label className=\"pure-material-textfield-outlined\">\r\n                    <input placeholder=\" \"\r\n                        value={project}\r\n                        name=\"project\"\r\n                        onChange={event => setProject(event.target.value)}\r\n                    />\r\n                    <span>Назва проекту</span>\r\n                </label>\r\n\r\n                <label className=\"pure-material-textfield-outlined\">\r\n                    <textarea placeholder=\" \" \r\n                        value={description}\r\n                        name=\"descriptionTextarea\"\r\n                        onChange={event => setDescription(event.target.value)}\r\n                    />\r\n                    <span>Опис проекту</span>\r\n                </label>\r\n                <div className=\"select\">\r\n                    <select className=\"select-text\"\r\n                        value={priority}\r\n                        name=\"priority\"\r\n                        onChange={event => setPriority(event.target.value)}>\r\n                        <option value=\"default\" disabled>Оберіть пріорітет</option>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"todo__button-group todo__button-group--right mt-20\">\r\n                    <button className=\"todo__button todo__button-change\"\r\n                        type=\"button\"\r\n                        onClick={changeTask}>\r\n                        Зберегти\r\n                    </button>\r\n                    <button className=\"todo__button todo__button--error\"\r\n                        type=\"button\" \r\n                        onClick={ () => {\r\n                            openChangeForm(false);\r\n                        }}>\r\n                        Відмінити\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </>           \r\n    )\r\n}\r\n\r\nexport default TodoChange","import React, {useContext, useState} from 'react';\r\nimport './TodoFilter.scss'\r\nimport TodoContext from \"../../contextTodo\";\r\n\r\n\r\nfunction TodoFilter() {\r\n    let {filterPriority, setNewFilterPriority, state, filterProject, setNewFilterProject} = useContext(TodoContext);\r\n    const [checked, setChecked] = useState(filterPriority);\r\n    const [project, setProject] = useState(filterProject);\r\n\r\n    let projects = [];\r\n    state.forEach(todo => {\r\n        if (todo.project.indexOf() === -1) {\r\n            projects.push(todo.project);\r\n        }     \r\n    });\r\n\r\n    function setFilterPriority(bool) {\r\n        setNewFilterPriority(bool)\r\n        setChecked(bool);\r\n    }\r\n\r\n    function setFilterProject(bool) {\r\n        setNewFilterProject(bool)\r\n        setProject(bool);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"todo-filter__title\">Фільтр:</h2>\r\n            <div className=\"todo-filter\">        \r\n                <label className=\"pure-material-checkbox\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={checked}\r\n                        onChange={event => setFilterPriority(event.target.checked)}\r\n                    />\r\n                    <span>по пріорітету</span>\r\n                </label>\r\n                <div className=\"select\">\r\n                    <select\r\n                        className=\"select-text\"\r\n                        value={project}\r\n                        onChange={event => setFilterProject(event.target.value)}\r\n                    >\r\n                        <option value='default'>Всі проекти</option>\r\n                        {projects.map( (project, index) => {\r\n                            return (\r\n                                <option key={index} \r\n                                        value={project}>\r\n                                    {project}\r\n                                </option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoFilter","function reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: Date.now(),\r\n                    title: action.payload.title,\r\n                    project: action.payload.project,\r\n                    description: action.payload.description,\r\n                    priority: action.payload.priority\r\n                }\r\n            ]\r\n            \r\n        case 'change':        \r\n            let newState = [];\r\n            state.forEach(todo => {\r\n                if (todo.id !== action.payload.id) {\r\n                    newState.push(todo);\r\n                } else {\r\n                    newState.push({\r\n                        id: action.payload.id,\r\n                        title: action.payload.title,\r\n                        project: action.payload.project,\r\n                        description: action.payload.description,\r\n                        priority: action.payload.priority\r\n                    });\r\n                }\r\n            })\r\n            return newState\r\n          \r\n        case 'remove':          \r\n            return state.filter( todo => action.payload !== todo.id )\r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport {reducer}","import React, {useState, useEffect, useReducer} from 'react';\nimport TodoList from './components/TodoList/TodoList';\nimport TodoAdd from './components/TodoAdd/TodoAdd';\nimport TodoChange from './components/TodoChange/TodoChange';\nimport TodoFilter from './components/TodoFilter/TodoFilter';\nimport TodoContext from './contextTodo';\nimport {reducer} from './reducer';\n\nfunction App() {\n\tconst data = JSON.parse(localStorage.getItem(\"todos\")) || [];\n\tconst [state, dispatch] = useReducer(reducer, data);\n\n\tconst [changeForm, setChangeForm] = useState(false);\n\tfunction openChangeForm(id) {\n\t\t// sometimes 0 comes, so need to check for false\n\t\tid === false\n\t\t\t? setChangeForm(false)\n\t\t\t: setChangeForm(state[state.findIndex(item => item.id === id)]);\n\t}\n\n\tconst [visibleForm, setVisibleForm] = useState(false);\n\tfunction openAddForm(visibleForm) {\n\t\tsetVisibleForm(visibleForm);\n\t}\n\n\tconst [filterPriority, setFilterPriority] = useState(false);\n\tfunction setNewFilterPriority(bool) {\n\t\tsetFilterPriority(bool);\n\t}\n\n\tconst [filterProject, setFilterProject] = useState('default');\n\tfunction setNewFilterProject(project) {\n\t\tsetFilterProject(project);\n\t}\n\n\tuseEffect(() => {\n\t\ttry {\n\t\t\tlocalStorage.setItem('todos', JSON.stringify(state));\n\t\t} catch (error) {\n\t\t\talert(error);\n\t\t}\n\n\t\tsetChangeForm(false);\n\t}, [state]);\n\n\treturn (\n\t\t<TodoContext.Provider value={\n\t\t\t{\n\t\t\t\tstate,\n\t\t\t\tdispatch,\n\t\t\t\tchangeForm,\n\t\t\t\topenChangeForm,\n\t\t\t\topenAddForm,\n\t\t\t\tvisibleForm,\n\t\t\t\tfilterPriority,\n\t\t\t\tsetNewFilterPriority,\n\t\t\t\tfilterProject,\n\t\t\t\tsetNewFilterProject,\n\t\t\t}\n\t\t}>\n\t\t\t<div className='wrapper'>\n\t\t\t\t<h1>Перелік завдань</h1>\n\t\t\t\t<TodoList />\n\t\t\t\t<TodoFilter />\n\t\t\t\t{changeForm ? <TodoChange /> : null}\n\t\t\t\t<TodoAdd/>\n\t\t\t</div>\n\t\t</TodoContext.Provider>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}