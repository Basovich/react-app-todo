{"version":3,"sources":["context.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/TodoAdd/TodoAdd.js","components/TodoChange/TodoChange.js","components/TodoFilter/TodoFilter.js","reducer.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","TodoItem","todo","index","dispatch","useContext","openChangeForm","openAddForm","text","className","title","project","priority","description","type","onClick","e","_this","currentTarget","closest","querySelector","classList","toggle","textContent","contains","payload","TodoList","props","todos","map","TodoAdd","visibleForm","useState","todoTitle","setTodoTitle","projectTitle","setProjectTitle","setDescription","setPriority","toggleAddForm","clearForm","placeholder","value","onChange","event","target","disabled","TodoChange","setTitle","setProject","useEffect","id","TodoFilter","projects","forEach","indexOf","push","defaultValue","reducer","state","action","Date","now","newState","filter","i","App","useReducer","JSON","parse","localStorage","getItem","changeForm","setChangeForm","setVisibleForm","setItem","stringify","error","alert","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9902898.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","import React, { useContext } from 'react';\r\nimport './TodoItem.scss'\r\nimport PropTypes from 'prop-types';\r\nimport Context from '../../context'\r\n\r\n\r\nfunction TodoItem({ todo, index }) {\r\n    const { dispatch } = useContext(Context);\r\n    const { openChangeForm } = useContext(Context);\r\n    const { openAddForm } = useContext(Context);\r\n\r\n    const text = {\r\n        isHidden: 'Показати опис',\r\n        isVisible: 'Приховати опис',\r\n    }\r\n\r\n    function toggleDescription(e) {\r\n        const _this = e.currentTarget;\r\n        const todo = _this.closest('.todo');\r\n        const description = todo.querySelector('.todo__description');\r\n        description.classList.toggle('is-visible');\r\n        _this.textContent = description.classList.contains('is-visible') ? text.isVisible : text.isHidden;\r\n    }\r\n\r\n    return (        \r\n        <li className=\"todo\"> \r\n            <p className=\"todo__title\">{todo.title}</p>  \r\n            <div className=\"todo__info\">\r\n                <p className=\"todo__project\">\r\n                    <b>Проект: </b> \r\n                    <span className=\"todo__project-name\">{todo.project}</span>\r\n                </p>\r\n                <p className=\"todo__priority\">\r\n                    <b>Пріорітет: </b> \r\n                    <span className=\"todo__priority-number\">{todo.priority}</span>\r\n                </p>\r\n            </div>\r\n            <div className=\"todo__description\">\r\n                <b className=\"todo__description-title\">Опис:</b>\r\n                <p className=\"todo__description-text\">{todo.description}</p>                \r\n            </div>\r\n            <div className=\"todo__button-group\">\r\n                <button className=\"todo__button todo__button-change\" \r\n                    type=\"button\"\r\n                    onClick={ () => {\r\n                        openAddForm(false);\r\n                        openChangeForm(index);\r\n                    }}>\r\n                    Змінити завдання\r\n                </button>\r\n\r\n                <button className=\"todo__button todo__button--more\" \r\n                    type=\"button\" \r\n                    onClick={toggleDescription}>\r\n                    Показати опис\r\n                </button>\r\n\r\n                <button className=\"todo__button todo__button--error\" \r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                        openChangeForm(false);\r\n                        dispatch({\r\n                            type: 'remove',\r\n                            payload: index\r\n                        })\r\n                    }}>\r\n                    Видалити завдання\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number.isRequired\r\n}\r\n\r\nexport default TodoItem","import React from 'react';\r\nimport './TodoList.scss';\r\nimport TodoItem from '../TodoItem/TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction TodoList (props) {\r\n\r\n    const todos = props.todos || [];\r\n \r\n    return (\r\n            <ul className=\"todo-list\">\r\n                {todos.map((todo, index) => {\r\n                    return (\r\n                        <TodoItem \r\n                            key={index} \r\n                            todo={todo}\r\n                            index={index}\r\n                        />\r\n                        \r\n                    )               \r\n                })}\r\n            </ul>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired    \r\n}\r\n\r\n\r\nexport default TodoList\r\n","import React, { useContext, useState } from 'react';\r\nimport './TodoAdd.scss'\r\nimport Context from '../../context'\r\n\r\n\r\nfunction TodoAdd() {\r\n    const { dispatch } = useContext(Context);\r\n    const { openChangeForm } = useContext(Context);\r\n    const { openAddForm } = useContext(Context);\r\n    const { visibleForm } = useContext(Context);\r\n\r\n    const [todoTitle, setTodoTitle] = useState('');\r\n    const [projectTitle, setProjectTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [priority, setPriority] = useState('default');\r\n\r\n\r\n    function toggleAddForm() {\r\n        openAddForm(!visibleForm);\r\n        clearForm();\r\n    }\r\n\r\n    function clearForm() {\r\n        setTodoTitle('');\r\n        setProjectTitle('');\r\n        setDescription('');\r\n        setPriority('default');\r\n    }\r\n\r\n    function showButton() {\r\n        return (\r\n            <div className=\"todo__button-group todo__button-group--right mt-20 todo-button-add\">\r\n                <button className=\"todo__button todo__button-change\"\r\n                    type=\"button\"\r\n                    onClick={ () => {\r\n                        toggleAddForm();\r\n                        openChangeForm(false);\r\n                    }}>\r\n                    Додати завдання\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function showForm() {\r\n        return (\r\n            <>\r\n                <h2>Додати нове завдання</h2>\r\n                <form className=\"todo-add\">\r\n                    <label className=\"pure-material-textfield-outlined\">\r\n                        <input placeholder=\" \"\r\n                            value={todoTitle}\r\n                            onChange={event => setTodoTitle(event.target.value)}\r\n                        />\r\n                        <span>Назва завдання</span>\r\n                    </label>\r\n                    <label className=\"pure-material-textfield-outlined\">\r\n                        <input placeholder=\" \"\r\n                            value={projectTitle}\r\n                            onChange={event => setProjectTitle(event.target.value)}\r\n                        />\r\n                        <span>Назва проекту</span>\r\n                    </label>\r\n\r\n                    <label className=\"pure-material-textfield-outlined\">\r\n                        <textarea placeholder=\" \"\r\n                            value={description}\r\n                            onChange={event => setDescription(event.target.value)}\r\n                        />\r\n                        <span>Опис проекту</span>\r\n                    </label>\r\n                    <div className=\"select\">\r\n                        <select className=\"select-text\"\r\n                            value={priority}\r\n                            onChange={event => setPriority(event.target.value)}>\r\n                            <option value=\"default\" disabled>Оберіть пріорітет</option>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"todo__button-group todo__button-group--right mt-20\">\r\n                        <button className=\"todo__button todo__button-change\"\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                                dispatch({\r\n                                    type: 'add',\r\n                                    payload: {\r\n                                        title: todoTitle,\r\n                                        project: projectTitle,\r\n                                        description: description,\r\n                                        priority: priority\r\n                                    }\r\n                                });\r\n\r\n                                clearForm();\r\n                            }}>\r\n                            Зберегти\r\n                    </button>\r\n                        <button className=\"todo__button todo__button--error\"\r\n                            type=\"button\"\r\n                            onClick={toggleAddForm}>\r\n                            Відмінити\r\n                    </button>\r\n                    </div>\r\n                </form>    \r\n            </>            \r\n        )\r\n    }\r\n\r\n    return (      \r\n        <div className='todo-add-wrap'>         \r\n            {visibleForm ? showForm() : showButton()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoAdd","import React, { useState, useContext, useEffect } from 'react';\r\nimport './TodoChange.scss'\r\nimport Context from '../../context'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction TodoChange(props) {\r\n    const { openChangeForm } = useContext(Context);\r\n    const { dispatch } = useContext(Context);\r\n\r\n    \r\n    const [title, setTitle] = useState(props.todo.title);\r\n    const [project, setProject] = useState(props.todo.project);\r\n    const [description, setDescription] = useState(props.todo.description);\r\n    const [priority, setPriority] = useState(props.todo.priority);\r\n\r\n    useEffect(() => {\r\n        setTitle(props.todo.title);\r\n        setProject(props.todo.project);\r\n        setDescription(props.todo.description);\r\n        setPriority(props.todo.priority);\r\n    }, [props]);\r\n\r\n    return (       \r\n        <>\r\n            <h2>Змінити завдання</h2>\r\n            <form className=\"todo-change-wrap\">\r\n                <label className=\"pure-material-textfield-outlined\">\r\n                    <input placeholder=\" \" \r\n                        value={title} \r\n                        onChange={event => setTitle(event.currentTarget.value)} \r\n                    />\r\n                    <span>Назва завдання</span>\r\n                </label>\r\n                <label className=\"pure-material-textfield-outlined\">\r\n                    <input placeholder=\" \"\r\n                        value={project}\r\n                        onChange={event => setProject(event.target.value)}\r\n                    />\r\n                    <span>Назва проекту</span>\r\n                </label>\r\n\r\n                <label className=\"pure-material-textfield-outlined\">\r\n                    <textarea placeholder=\" \" \r\n                        value={description}\r\n                        onChange={event => setDescription(event.target.value)}\r\n                    />\r\n                    <span>Опис проекту</span>\r\n                </label>\r\n                <div className=\"select\">\r\n                    <select className=\"select-text\"\r\n                        value={priority}\r\n                        onChange={event => setPriority(event.target.value)}>\r\n                        <option value=\"default\" disabled>Оберіть пріорітет</option>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"todo__button-group todo__button-group--right mt-20\">\r\n                    <button className=\"todo__button todo__button-change\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            dispatch({\r\n                                type: 'change',\r\n                                payload: {\r\n                                    title,\r\n                                    project,\r\n                                    description,\r\n                                    priority,\r\n                                    id: props.todo.id                                    \r\n                                }\r\n                            });\r\n                        }}>\r\n                        Зберегти\r\n                    </button>\r\n                    <button className=\"todo__button todo__button--error\"\r\n                        type=\"button\" \r\n                        onClick={ () => {\r\n                            openChangeForm(false);\r\n                        }}>\r\n                        Відмінити\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </>           \r\n    )\r\n}\r\n\r\nTodoChange.propTypes = {\r\n    todo: PropTypes.object.isRequired  \r\n}\r\n\r\n\r\nexport default TodoChange","import React from 'react';\r\nimport './TodoFilter.scss'\r\n\r\n\r\nfunction TodoFilter(props) {\r\n\r\n    let projects = [];\r\n    props.todos.forEach(todo => {\r\n        if (todo.project.indexOf() === -1) {\r\n            projects.push(todo.project);\r\n        }     \r\n    });\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"todo-filter__title\">Фільтр:</h2>\r\n            <div className=\"todo-filter\">        \r\n                <label className=\"pure-material-checkbox\">\r\n                    <input type=\"checkbox\" />\r\n                    <span>по пріорітету</span>\r\n                </label>\r\n                <div className=\"select\">\r\n                    <select className=\"select-text\" defaultValue={'default'}>\r\n                        <option value=\"default\" disabled>Всі проекти</option>\r\n                        {projects.map( (project, index) => {\r\n                            return (\r\n                                <option key={index} \r\n                                        value={project}>\r\n                                    {project}\r\n                                </option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                    <span className=\"select-bar\"></span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoFilter","function reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: Date.now(),\r\n                    title: action.payload.title,\r\n                    project: action.payload.project,\r\n                    description: action.payload.description,\r\n                    priority: action.payload.priority\r\n                }\r\n            ]\r\n            \r\n        case 'change':        \r\n            let newState = [];\r\n            state.forEach(todo => {\r\n                if (todo.id !== action.payload.id) {\r\n                    newState.push(todo);\r\n                } else {\r\n                    newState.push({\r\n                        id: action.payload.id,\r\n                        title: action.payload.title,\r\n                        project: action.payload.project,\r\n                        description: action.payload.description,\r\n                        priority: action.payload.priority\r\n                    });\r\n                }\r\n            })\r\n            return newState\r\n          \r\n        case 'remove':          \r\n            return state.filter( (todo, i) => action.payload !== i )\r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport {reducer}","import React, { useState, useEffect, useReducer } from 'react';\nimport TodoList from './components/TodoList/TodoList';\nimport TodoAdd from './components/TodoAdd/TodoAdd';\nimport TodoChange from './components/TodoChange/TodoChange';\nimport TodoFilter from './components/TodoFilter/TodoFilter';\nimport Context from './context';\nimport {reducer} from './reducer';\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, JSON.parse(localStorage.getItem(\"todos\")));\n\n  const [changeForm, setChangeForm] = useState(false);\n  function openChangeForm(index) {\n    index === false ? setChangeForm(false) : setChangeForm(state[index]);\n  }\n\n  const [visibleForm, setVisibleForm] = useState(false);\n  function openAddForm(visibleForm) {\n    setVisibleForm(visibleForm);\n  }\n  \n  useEffect( () => {\n    try {\n      localStorage.setItem('todos', JSON.stringify(state));\n    } catch (error) {\n      alert(error);\n    }\n\n    setChangeForm(false);\n  }, [state]);\n\n  return (\n    <Context.Provider value={{ dispatch, openChangeForm, openAddForm, visibleForm }}>\n      <div className='wrapper'>\n        <h1>Перелік завдань</h1>\n        <TodoList todos={state} />  \n        <TodoFilter todos={state} />  \n        {changeForm ? <TodoChange todo={changeForm} /> : null }\n        <TodoAdd />        \n      </div>\n    </Context.Provider>    \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}